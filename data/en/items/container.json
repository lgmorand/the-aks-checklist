[
  {
    "title": "Scan the container image against vulnerabilities",
    "priority": "High",
    "guid": "59bce65d-e8a0-43f9-9879-468d66a786d6",
    "description": "Scan your container images to ensure there are no vulnerabilities in it",
    "documentation": [
      {
        "title": "Azure Security Center : scanning feature (Qualys)",
        "url": "https://docs.microsoft.com/azure/security-center/azure-container-registry-integration"
      },
      {
        "title": "Identify vulnerable container images in your CI/CD workflows",
        "url": "https://docs.microsoft.com/azure/defender-for-cloud/defender-for-containers-cicd"
      }
    ],
    "tools": [
      {
        "title": "Prisma (ex Twistlock)",
        "url": "https://www.twistlock.com/"
      },
      {
        "title": "Anchore",
        "url": "https://anchore.com/"
      },
      {
        "title": "Clair",
        "url": "https://github.com/quay/clair"
      }
    ],
    "tags": [
      "all",
      "security"
    ],
    "optionalFields": {
      "score": {
        "cost": -1,
        "security": 1
      }
    }
  },
  {
    "title": "Allow deploying containers only from known registries",
    "guid": "8dcb9d27-a601-48e6-aeb8-e0469aaf8921",
    "priority": "Medium",
    "description": "One of the most common custom policies that you might want to consider is to restrict the images that can be deployed in your cluster. But it can also be addressed with a proper egress lockdown or using an admission controller",
    "documentation": [
      {
        "title": "Use the Azure Policy : Ensure only allowed container images in AKS",
        "url": "https://docs.microsoft.com/azure/governance/policy/concepts/rego-for-aks#built-in-policies"
      },
      {
        "title": "Using ImagePolicyWebhook",
        "url": "https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#imagepolicywebhook"
      },
      {
        "title": "Using egress lockdown and authorizing only the URL of your registry",
        "url": "https://docs.microsoft.com/azure/aks/limit-egress-traffic"
      }
    ],
    "tags": [
      "all",
      "security"
    ],
    "optionalFields": {
      "score": {}
    }
  },
  {
    "title": "Runtime Security of Applications",
    "guid": "a71e024f-ac46-4d0e-86d8-fad9a86c99af",
    "priority": "High",
    "description": "Integrate Runtime Security for your pods.  To complete the defense in depth structure, ensure Runtime protection is in place to protect from process, network, storage and system call attacks.",
    "tools": [
      {
        "title": "Prisma Runtime defense",
        "url": "https://docs.paloaltonetworks.com/prisma/prisma-cloud/prisma-cloud-admin-compute/runtime_defense.html"
      },
      {
        "title": "Falco",
        "url": "https://falco.org"
      }
    ],
    "tags": [
      "all",
      "security"
    ],
    "optionalFields": {
      "score": {}
    }
  },
  {
    "title": "Quarantine of Docker Images in Docker Registries that have discovered issues",
    "guid": "c970cb26-a707-4bf2-9e40-5401fea3d55b",
    "priority": "High",
    "description": "Use policy to protect images from drift while in the registry, on both push and pull.",
    "detail": "On build, the image is secured based on the threshold set, but now while in the registry a new issue is discovered.  You need to ensure that the image can not be deployed until the issue is remediated.",
    "documentation": [
      {
        "title": "ACR Quarantine",
        "url": "https://github.com/Azure/acr/tree/master/docs/preview/quarantine"
      }
    ],
    "tags": [
      "all",
      "security"
    ],
    "optionalFields": {
      "score": {}
    }
  },
  {
    "title": "Role-Based Access Contol (RBAC) to Docker Registries",
    "guid": "3f703579-9f4a-43c4-8c40-5a9e78015379",
    "priority": "High",
    "description": "The Azure Container Registry service supports a set of built-in Azure roles that provide different levels of permissions to an Azure container registry. Use Azure role-based access control (RBAC) to assign specific permissions to users, service principals, or other identities that need to interact with a registry.",
    "documentation": [
      {
        "title": "Azure Container Registry roles and permissions",
        "url": "https://docs.microsoft.com/azure/container-registry/container-registry-roles"
      }
    ],
    "tags": [
      "all",
      "security"
    ],
    "optionalFields": {
      "score": {}
    }
  },
  {
    "title": "Network Segmentation of Docker Registries",
    "guid": "6ae51d09-8142-4979-95ed-7ec3451de81c",
    "priority": "High",
    "description": "Limit access to a registry by assigning virtual network private IP addresses to the registry endpoints and using Azure Private Link. Network traffic between the clients on the virtual network and the registry's private endpoints traverses the virtual network and a private link on the Microsoft backbone network, eliminating exposure from the public internet. Private Link also enables enables private registry access from on-premises through Azure ExpressRoute private peering or a VPN gateway.",
    "documentation": [
      {
        "title": "Azure Container Registry Private Link",
        "url": "https://docs.microsoft.com/azure/container-registry/container-registry-private-link"
      }
    ],
    "tags": [
      "all",
      "security",
      "network"
    ],
    "optionalFields": {
      "score": {}
    }
  },
  {
    "title": "Prefer distroless images",
    "guid": "f57ba3a5-93ae-435f-9468-80ccd6a841b9",
    "priority": "Medium",
    "description": "When building a docker image, try to use the distroless version of the base OS image, to reduce the risk of vulnerabilities with preinstalled but unused tools. From example, use base-debian10 instead of debian10",
    "detail": "'Distroless' images are bare-bones versions of common base images. They have the bare-minimum needed to execute a binary.The shell and other developer utilities have been removed so that if/when an attacker gains control of your container, they can't do much of anything",
    "documentation": [
      {
        "title": "Google distroless images",
        "url": "https://github.com/GoogleContainerTools/distroless"
      }
    ],
    "tags": [
      "all",
      "security"
    ],
    "optionalFields": {
      "score": {}
    }
  },
  {
    "title": "Refresh container when base image is updated",
    "guid": "22882284-a9c2-4e16-b3e3-2d4947cc24b8",
    "priority": "Low",
    "description": "As you use base images for application images, use automation to build new images when the base image is updated. As those base images typically include security fixes, update any downstream application container images.",
    "documentation": [
      {
        "title": "Automatically build new images on base image update",
        "url": "https://docs.microsoft.com/azure/aks/operator-best-practices-container-image-management#automatically-build-new-images-on-base-image-update"
      },
      {
        "title": "Azure DevOps - Trigger pipeline from Docker image update",
        "url": "https://dev.to/larryclaman/trigger-azure-devops-build-pipeline-from-docker-image-update-5d3i"
      }
    ],
    "tags": [
      "all",
      "resources"
    ],
    "optionalFields": {
      "score": {}
    }
  }
]
