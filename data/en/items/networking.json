[
  {
    "title": "Choose the best CNI network plugin for your requirements (Azure CNI recommended)",
    "priority": "Medium",
    "guid": "a0f61565-9de5-458f-a372-49c831112dbd",
    "description": "For integration with existing virtual networks or on-premises networks, use Azure CNI networking in AKS. This network model also allows greater separation of resources and controls in an enterprise environment but be aware of the impact on the network topology/IP ranges. In the future, you'll be able to use the CNI overlay model which gives more control and takes the benefits of both approachs.",
    "detail": "While Kubenet is the default Kubernetes network plugin, the Container Networking Interface (CNI) is a vendor-neutral protocol that lets the container runtime make requests to a network provider. The Azure CNI assigns IP addresses to pods and nodes, and provides IP address management (IPAM) features as you connect to existing Azure virtual networks. Each node and pod resource receives an IP address in the Azure virtual network, and no additional routing is needed to communicate with other resources or services.",
    "documentation": [
      {
        "title": "Kubenet vs CNI",
        "url": "https://docs.microsoft.com/azure/aks/operator-best-practices-network#choose-the-appropriate-network-model"
      },
      {
        "title": "Dynamic IP allocation",
        "url": "https://docs.microsoft.com/azure/aks/configure-azure-cni#dynamic-allocation-of-ips-and-enhanced-subnet-support"
      },
      {
        "title": "Azure CNI Overlay",
        "url": "https://learn.microsoft.com/azure/aks/azure-cni-overlay"
      },
      {
        "title": "Bring your own CNI",
        "url": "https://docs.microsoft.com/azure/aks/use-byo-cni"
      },
      {
        "title": "Add a node pool with a unique subnet",
        "url": "https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-node-pool-with-a-unique-subnet"
      }
    ],
    "tags": [
      "all",
      "network"
    ],
    "optionalFields": {
      "score": {
        "simple": 1,
        "graph": "where type=='microsoft.containerservice/managedclusters' | extend compliant = (properties.networkProfile.networkPlugin=='azure') | distinct id,compliant"
      }
    }
  },
  {
    "title": "If using Azure CNI, size your subnet accordingly considering the maximum number of pods per node",
    "priority": "High",
    "guid": "7faf12e7-0943-4f63-8472-2da29c2b1cd6",
    "description": "The size of your virtual network and its subnet must accommodate the number of pods you plan to run and the number of nodes for the cluster.",
    "detail": "As an example, using CNI, you need one IP for each node + one spare for a new node in case of cluster upgrade, and you need an IP for each pod which can represent hundred of IP addresses",
    "documentation": [
      {
        "title": "Plan IP addressing for your cluster",
        "url": "https://docs.microsoft.com/azure/aks/configure-azure-cni#plan-ip-addressing-for-your-cluster"
      }
    ],
    "tags": [
      "all",
      "network"
    ],
    "optionalFields": {
      "score": {
        "scale": 1
      }
    }
  },
  {
    "title": "Use an ingress controller to expose web-based apps instead of exposing them with LoadBalancer-type services",
    "priority": "Medium",
    "guid": "b3808b9f-a1cf-4204-ad01-3a923ce474db",
    "description": "To distribute HTTP or HTTPS traffic to your applications, use ingress resources and controllers. Ingress controllers provide additional features over a regular Azure load balancer, and can be managed as native Kubernetes resources.",
    "documentation": [
      {
        "title": "Distribute ingress traffic",
        "url": "https://docs.microsoft.com/azure/aks/operator-best-practices-network#distribute-ingress-traffic"
      },
      {
        "title": "Network concepts: Ingress controllers",
        "url": "https://learn.microsoft.com/en-us/azure/aks/concepts-network#ingress-controllers"
      }
    ],
    "tags": [
      "all",
      "network"
    ],
    "optionalFields": {
      "score": {
        "scale": 1,
        "simple": -1
      }
    }
  },
  {
    "title": "Secure your exposed applications with a web application firewall (WAF)",
    "priority": "Medium",
    "guid": "a3a92c2d-e7e2-4165-a3a8-7af4a7a1f893",
    "description": "If you plan to host exposed applications, to scan incoming traffic for potential attacks, use a web application firewall (WAF) such as Barracuda WAF for Azure or Azure Application Gateway. These more advanced network resources can also route traffic beyond just HTTP and HTTPS connections or basic SSL termination.",
    "documentation": [
      {
        "title": "Secure traffic with a web application firewall (WAF)",
        "url": "https://docs.microsoft.com/azure/aks/operator-best-practices-network#secure-traffic-with-a-web-application-firewall-waf"
      }
    ],
    "tags": [
      "all",
      "network"
    ],
    "optionalFields": {
      "score": {
        "simple": -1,
        "cost": -1,
        "security": 2
      }
    }
  },
  {
    "title": "Apply control on ingress hostnames",
    "guid": "e5684a8b-f072-43d2-83b2-234ad48f57c7",
    "priority": "Low",
    "description": "When a user creates an Ingress manifest, they can use any hostname in it. You may want to control which hostnames are allowed to use, like your company's hostnames.",
    "documentation": [
      {
        "title": "Tutorial: only allow approved domain names as ingress hostnames",
        "url": "https://www.openpolicyagent.org/docs/latest/kubernetes-tutorial/#4-define-a-policy-and-load-it-into-opa-via-kubernetes"
      }
    ],
    "tags": [
      "all",
      "security",
      "network"
    ],
    "optionalFields": {
      "score": {}
    }
  },
  {
    "title": "Don't expose your load-balancer on Internet if not necessary",
    "guid": "c0179fd4-470b-43c8-b7bb-80307051bc96",
    "priority": "High",
    "description": "There is almost no reason to directly expose the ingress entry point to Internet but by default AKS create a public one. Tell him to create an internal one only.",
    "documentation": [
      {
        "title": "Create an ingress controller to an internal virtual network",
        "url": "https://docs.microsoft.com/azure/aks/ingress-internal-ip"
      }
    ],
    "tags": [
      "all",
      "security",
      "network"
    ],
    "optionalFields": {
      "score": {}
    }
  },
  {
    "title": "Control traffic flow with network policies",
    "guid": "0751f099-e6f4-4250-b405-d2b26c707432",
    "priority": "Medium",
    "severity": "High",
    "description": "Use network policies to allow or deny traffic to pods. By default, all traffic is allowed between pods within a cluster. For improved security, define rules that limit pod communication.",
    "detail": "Network policy is a Kubernetes feature that lets you control the traffic flow between pods. You can choose to allow or deny traffic based on settings such as assigned labels, namespace, or traffic port. The use of network policies gives a cloud-native way to control the flow of traffic. As pods are dynamically created in an AKS cluster, the required network policies can be automatically applied. Don't use Azure network security groups to control pod-to-pod traffic, use network policies.",
    "documentation": [
      {
        "title": "Enable a Kubernetes Network Policy option (Calico/Azure)",
        "url": "https://docs.microsoft.com/azure/aks/operator-best-practices-network#control-traffic-flow-with-network-policies"
      },
      {
        "title": "Secure traffic between pods using network policies",
        "url": "https://docs.microsoft.com/azure/aks/use-network-policies"
      }
    ],
    "tools": [
      {
        "title": "Calico",
        "url": "https://docs.projectcalico.org/reference/resources/networkpolicy"
      },
      {
        "title": "Cillium",
        "url": "https://cilium.io/"
      }
    ],
    "tags": [
      "all",
      "security",
      "network",
      "multi-tenancy"
    ],
    "optionalFields": {
      "score": {
        "graph": "where type=='microsoft.containerservice/managedclusters' | extend compliant = isnotnull(properties.networkProfile.networkPolicy) | distinct id,compliant",
        "security": 1
      }
    }
  },
  {
    "title": "Configure default network policies in each namespace",
    "guid": "0bc4e0c6-97fd-411a-9eb4-1a1f85f9cdf0",
    "priority": "Medium",
    "description": "Start by creating a deny all policy in each namespace and then add specific policies.",
    "documentation": [
      {
        "title": "Recipes of best default network policies",
        "url": "https://github.com/ahmetb/kubernetes-network-policy-recipes"
      },
      {
        "title": "Callico global network policy",
        "url": "https://projectcalico.docs.tigera.io/reference/resources/globalnetworkpolicy"
      }
    ],
    "tags": [
      "all",
      "security",
      "multi-tenancy",
      "network"
    ],
    "optionalFields": {
      "score": {}
    }
  },
  {
    "title": "Filter egress traffic with AzFW/NVA if your security requirements mandate it (egress lockdown)",
    "priority": "Medium",
    "guid": "3b365a91-7ecb-4e48-bbe5-4cd7df2e8bba",
    "severity": "High",
    "description": "Use Azure Firewall to secure and control all egress traffic going outside of the cluster.",
    "documentation": [
      {
        "title": "Egress traffic requirements",
        "url": "https://docs.microsoft.com/azure/aks/limit-egress-traffic"
      }
    ],
    "tags": [
      "all",
      "security",
      "network"
    ],
    "optionalFields": {
      "score": {
        "simple": -2,
        "graph": "where type=='microsoft.containerservice/managedclusters' | extend compliant = (properties.networkProfile.outboundType=='userDefinedRouting') | distinct id,compliant",
        "security": 2
      }
    }
  },
  {
    "title": "Don't expose your container registry on Internet",
    "guid": "e38f1680-8ddc-4c93-bf09-6b932a4935ca",
    "priority": "Low",
    "description": "When possible, use private link to only allow private network to reach your registry.",
    "documentation": [
      {
        "title": "Azure Container Registry Private Link",
        "url": "https://docs.microsoft.com/azure/container-registry/container-registry-private-link"
      }
    ],
    "tags": [
      "all",
      "security",
      "network"
    ],
    "optionalFields": {
      "score": {}
    }
  },
  {
    "title": "Bloc Pod access to VMSS IMDS",
    "guid": "4fb072a7-0303-46d8-9ecf-d8aa4d69ff83",
    "priority": "Medium",
    "description": "By default, Pods have access to VMSS IMDS and can request access token from the attached Managed Identity. This access should be restriced by using Network Policy.",
    "documentation": [
      {
        "title": "Pods requesting access to get a token",
        "url": "https://docs.microsoft.com/azure/active-directory/managed-identities-azure-resources/how-to-use-vm-token#get-a-token-using-curl"
      }
    ],
    "tags": [
      "all",
      "security",
      "network"
    ],
    "optionalFields": {
      "score": {}
    }
  },
  {
    "title": "Use private clusters if your requirements mandate it",
    "guid": "29fb411c-20a8-4c39-84df-aaa4227eaeb2",
    "priority": "High",
    "description": "In a private cluster, the control plane or API server has internal IP addresses and is not exposed to Internet",
    "detail": "By using a private cluster, you can ensure that network traffic between your API server and your node pools remains on the private network only. Because the API server has a private address, it means that to access it for administration or for deployment, you need to set up private connection, like using a 'jumpbox' (i.e.: Azure Bastion)",
    "documentation": [
      {
        "title": "Create a private cluster (using private link)",
        "url": "https://docs.microsoft.com/azure/aks/private-clusters"
      },
      {
        "title": "Create an Azure Kubernetes Service cluster with API Server VNet Integration (preview)",
        "url": "https://learn.microsoft.com/en-us/azure/aks/api-server-vnet-integration"
      },
      {
        "title": "Use azure CLI to run command on a private cluster",
        "url": "https://docs.microsoft.com/azure/aks/private-clusters#options-for-connecting-to-the-private-cluster"
      },
      {
        "title": "Use public DNS with a private cluster",
        "url": "https://docs.microsoft.com/azure/aks/private-clusters#create-a-private-aks-cluster-with-a-public-dns-address"
      }
    ],
    "tags": [
      "all",
      "security",
      "network"
    ],
    "optionalFields": {
      "score": {}
    }
  },
  {
    "title": "Enable traffic management",
    "guid": "5d0bb60d-b8e0-4031-9c5b-1f0a735f771f",
    "priority": "Medium",
    "description": "Azure Traffic Manager can direct customers to their closest AKS cluster and application instance. For the best performance and redundancy, direct all application traffic through Traffic Manager before it goes to your AKS cluster.",
    "detail": "If you have multiple AKS clusters in different regions, use Traffic Manager to control how traffic flows to the applications that run in each cluster. Azure Traffic Manager is a DNS-based traffic load balancer that can distribute network traffic across regions. Use Traffic Manager to route users based on cluster response time or based on geography. It can be used to improve app availability with automatic failover",
    "documentation": [
      {
        "title": "Use Azure Traffic Manager to route traffic",
        "url": "https://docs.microsoft.com/azure/aks/operator-best-practices-multi-region#use-azure-traffic-manager-to-route-traffic"
      }
    ],
    "tags": [
      "all",
      "network",
      "resiliency",
      "multi-tenancy"
    ],
    "optionalFields": {
      "score": {}
    }
  },
  {
    "title": "If using Azure CNI, check the maximum pods/node (default 30)",
    "priority": "High",
    "guid": "22f54b29-bade-43aa-b1e8-c38ec9366673",
    "description": "With Azure Container Networking Interface (CNI), every pod gets an IP address from the subnet and can be accessed directly.",
    "detail": "These IP addresses must be unique across your network space, and must be planned in advance. Each node has a configuration parameter for the maximum number of pods that it supports. ",
    "documentation": [
      {
        "title": "Configure Azure CNI networking on AKS",
        "url": "https://docs.microsoft.com/azure/aks/configure-azure-cni"
      }
    ],
    "tags": [
      "all",
      "IPAM",
      "network"
    ],
    "optionalFields": {
      "score": {
        "scale": 1,
        "simple": -1
      }
    }
  },
  {
    "title": "If using a public API endpoint, restrict the IP addresses that can access it",
    "guid": "d783a3e8-264f-4dac-870f-569791d1837e",
    "priority": "Medium",
    "description": "To improve the security of your clusters and minimize the risk of attacks, we recommend limiting the IP address ranges that can access the API server.",
    "documentation": [
      {
        "title": "Secure access to the API server using authorized IP address ranges",
        "url": "https://docs.microsoft.com/azure/aks/api-server-authorized-ip-ranges"
      }
    ],
    "tags": [
      "all",
      "security",
      "network"
    ],
    "optionalFields": {
      "score": {}
    }
  },
  {
    "title": "Use Azue NAT Gateway as outboundType for scaling egress traffic",
    "priority": "Medium",
    "guid": "ccb534e7-416e-4a1d-8e93-533b53199085",
    "description": "Whilst AKS customers are able to route egress traffic through an Azure Load Balancer, there are limitations on the amount of outbound flows of traffic that is possible.",
    "documentation": [
      {
        "title": "Managed NAT Gateway",
        "url": "https://learn.microsoft.com/azure/aks/nat-gateway"
      }
    ],
    "tags": [
      "all",
      "scalability",
      "network"
    ],
    "optionalFields": {
      "score": {
        "scale": 1,
        "simple": -1
      }
    }
  },
  {
    "title": "Use Dynamic allocations of IPs in order to avoid Azure CNI IP exhaustion",
    "priority": "Medium",
    "guid": "8ee9a69a-1b58-4b1e-9c61-476e110a160b",
    "description": "A drawback with the traditional CNI is the exhaustion of pod IP addresses as the AKS cluster grows, resulting in the need to rebuild the entire cluster in a bigger subnet.",
    "detail": "The new dynamic IP allocation capability in Azure CNI solves this problem by allocating pod IPs from a subnet separate from the subnet hosting the AKS cluster.",
    "documentation": [
      {
        "title": "Dynamic allocation of IPs and enhanced subnet support",
        "url": "https://learn.microsoft.com/azure/aks/configure-azure-cni#dynamic-allocation-of-ips-and-enhanced-subnet-support"
      }
    ],
    "tags": [
      "all",
      "scalability",
      "network"
    ],
    "optionalFields": {
      "score": {
        "scale": 1,
        "simple": -1
      }
    }
  },
  {
    "title": "If using AGIC, do not share an AppGW across clusters",
    "priority": "Medium",
    "guid": "cbd8ac2a-aebc-4a2a-94da-1dbf3dc99248",
    "description": "The App Gateway Ingress Controller (AGIC) is a pod within your Kubernetes cluster. AGIC monitors the Kubernetes Ingress resources, and creates and applies App Gateway config based on these.",
    "documentation": [
      {
        "title": "Application gateway ingress controller",
        "url": "https://azure.github.io/application-gateway-kubernetes-ingress/setup/install-existing/"
      }
    ],
    "tags": [
      "all",
      "scalability",
      "security",
      "network"
    ],
    "optionalFields": {
      "score": {
        "simple": -1,
        "security": 1
      }
    }
  },
  {
    "title": "Use Private Endpoints (preferred) or Virtual Network Service Endpoints to access PaaS services from the cluster",
    "priority": "Medium",
    "guid": "ecccd979-3b6b-4cda-9b50-eb2eb03dda6d",
    "description": "This will help keep your cluster secure by limiting access from outside the virtual network to Azure PaaS services",
    "documentation": [
      {
        "title": "What is Azure Private Link?",
        "url": "https://docs.microsoft.com/azure/private-link/private-link-overview"
      }
    ],
    "tags": [
      "all",
      "security",
      "network"
    ],
    "optionalFields": {
      "score": {
        "simple": -1,
        "graph": "where type=='microsoft.containerservice/managedclusters' | where isnotnull(properties.apiServerAccessProfile.enablePrivateCluster) | extend compliant = (properties.apiServerAccessProfile.enablePrivateCluster==true) | distinct id, compliant",
        "security": 1
      }
    }
  },
  {
    "title": "Consider using a service mesh for advanced microservice communication management",
    "priority": "Medium",
    "guid": "e9855d04-c3c3-49c9-a6bb-2c12159a114b",
    "description": "A service mesh provides capabilities like traffic management, resiliency, policy, security, strong identity, and observability to your workloads.",
    "documentation": [
      {
        "title": "About service meshes",
        "url": "https://learn.microsoft.com/azure/aks/servicemesh-about"
      }
    ],
    "tags": [
      "all",
      "security",
      "network"
    ],
    "optionalFields": {
      "score": {
        "simple": -2,
        "security": 1
      }
    }
  }, 
  {
    "title": "If required add your own CNI plugin",
    "priority": "Low",
    "guid": "57bf217f-6dc8-481c-81e2-785773e9c00f",
    "description": "A service mesh provides capabilities like traffic management, resiliency, policy, security, strong identity, and observability to your workloads.",
    "documentation": [
      {
        "title": "Bring your own Container Network Interface (CNI) plugin for AKS",
        "url": "https://learn.microsoft.com/azure/aks/servicemesh-about"
      }
    ],
    "tags": [
      "all",
      "operations",
      "security",
      "network"
    ],
    "optionalFields": {
      "score": {
        "simple": -2,
        "security": 1
      }
    }
  },
  {
    "title": "If using Azure CNI, consider using different Subnets for NodePools",
    "priority": "Medium",
    "guid": "22fbe8d6-9b40-47ef-9011-25bb1a555a6b",
    "description": "This can address requirements such as having non-contiguous virtual network address space to split across node pools and other security reasons.",
    "documentation": [
      {
        "title": "Add a node pool with a unique subnet",
        "url": "https://learn.microsoft.com/en-us/azure/aks/use-multiple-node-pools#add-a-node-pool-with-a-unique-subnet"
      }
    ],
    "tags": [
      "all",
      "security",
      "network"
    ],
    "optionalFields": {
      "score": {
        "simple": -2,
        "security": 1
      }
    }
  },
  {
    "title": "Verify non overlapping CIDR ranges for Service-CIDR and Pod-CIDR or Subnet-CIDR",
    "priority": "Medium",
    "guid": "22fbe8d6-9b40-47ef-9011-25bb1a555a6c",
    "description": "The Service CIDR should not overlap with Pod CIDR or Subnet CIDR or even peered VNET CIDR. If not configured correctly, the cluster might have strange behavior.",
    "documentation": [
      {
        "title": "Pod CIDR, Service CIDR and Subnet CIDR",
        "url": "https://learn.microsoft.com/en-us/azure/aks/configure-azure-cni#plan-ip-addressing-for-your-cluster"
      },
      {
        "title": "Use the right CIDR ranges for networking parameters",
        "url": "https://learn.microsoft.com/en-us/azure/aks/configure-azure-cni#deployment-parameters"
      }
    ],
    "tags": [
      "all",
      "security",
      "network"
    ],
    "optionalFields": {
      "score": {
        "simple": -2,
        "security": 1
      }
    }
  }
]
